global:
  s3SecretName: vao-dev-app-access-key

maildev: {}

backend:
  vars:
    S3_BUCKET_ROOT_DIR: preprod/files

migrate-s3:
  vars:
    S3_BUCKET_ROOT_DIR: preprod/files


pgweb:
  ~chart: pgweb
  pgweb:
    env:
      - name: PGWEB_DATABASE_URL
        valueFrom:
          secretKeyRef:
            name: pg-app
            key: DATABASE_URL
    ingress:
      enabled: false
    oauth2-proxy:
      enabled: true
      host: pgweb-{{ .Values.global.host }}
      config:
        OAUTH2_PROXY_GITHUB_ORG: "SocialGouv"
        OAUTH2_PROXY_GITHUB_TEAM: "admins-vao,sre"
      envFrom:
        - secretRef:
            name: oauth2-proxy

pg:
  backup:
    name: "202407291149" # backup on a new folder
    ~tpl~enabled: "true"

jobs:
  runs:
    build-frontend-usagers:
      with:
        buildArgs:
          NUXT_PUBLIC_APP_VERSION: "{{ .Values.global.gitBranch }}"
          NUXT_PUBLIC_ENVIRONMENT: "preprod"
          NUXT_PUBLIC_SENTRY_ENABLED: "true"
    build-frontend-bo:
      with:
        buildArgs:
          NUXT_PUBLIC_APP_VERSION: "{{ .Values.global.gitBranch }}"
          NUXT_PUBLIC_ENVIRONMENT: "preprod"
          NUXT_PUBLIC_SENTRY_ENABLED: "true"
    migrations-db:
      env:
        - name: PG_VAO_SUPERUSER
          valueFrom:
            secretKeyRef:
              name: pg-superuser
              key: user
        - name: PG_VAO_SUPERPASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-superuser
              key: password
        - name: POSTGRES_HOST
          valueFrom:
            secretKeyRef:
              name: pg-superuser
              key: host
        - name: POSTGRES_PORT
          valueFrom:
            secretKeyRef:
              name: pg-superuser
              key: port
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: pg-app
              key: PGDATABASE
        - name: S3_BUCKET_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: "{{.Values.global.s3SecretName}}"
              key: bucket_endpoint
        - name: S3_BUCKET_NAME
          valueFrom:
            secretKeyRef:
              name: "{{.Values.global.s3SecretName}}"
              key: bucket_name
        - name: S3_BUCKET_REGION
          valueFrom:
            secretKeyRef:
              name: "{{.Values.global.s3SecretName}}"
              key: bucket_region  
        - name: S3_BUCKET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: "{{.Values.global.s3SecretName}}"
              key: bucket_access_key  
        - name: S3_BUCKET_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: "{{.Values.global.s3SecretName}}"
              key: bucket_secret_key
        - name: S3_BUCKET_ROOT_DIR
          value: preprod/files