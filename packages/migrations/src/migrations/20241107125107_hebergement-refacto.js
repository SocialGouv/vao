/**
 * @param { import("knex").Knex } knex
 * @returns { Promise<void> }
 */
exports.up = function (knex) {
  return knex.raw(`
CREATE TABLE FRONT.ADRESSE (
  ID SERIAL NOT NULL,
  CLE_INSEE VARCHAR(50) UNIQUE,
  LABEL TEXT NOT NULL,
  CODE_INSEE VARCHAR(5) NOT NULL,
  CODE_POSTAL VARCHAR(5) NOT NULL,
  LONG DOUBLE PRECISION NOT NULL,
  LAT DOUBLE PRECISION NOT NULL,
  DEPARTEMENT VARCHAR(4) REFERENCES GEO.TERRITOIRES (CODE),
  CONSTRAINT PK_ADRESSE PRIMARY KEY (ID),
  CONSTRAINT UNIQUE_CLE_INSEE UNIQUE (CLE_INSEE)
);

INSERT INTO
  FRONT.ADRESSE (
    LABEL,
    CODE_INSEE,
    CODE_POSTAL,
    LONG,
    LAT,
    DEPARTEMENT
  )
SELECT DISTINCT
  COORDONNEES -> 'adresse' ->> 'label' AS LABEL,
  COORDONNEES -> 'adresse' ->> 'codeInsee' AS CODE_INSEE,
  COORDONNEES -> 'adresse' ->> 'codePostal' AS CODE_POSTAL,
  (COORDONNEES -> 'adresse' -> 'coordinates' -> 0)::DOUBLE PRECISION AS LONG,
  (COORDONNEES -> 'adresse' -> 'coordinates' -> 1)::DOUBLE PRECISION AS LAT,
  COORDONNEES -> 'adresse' ->> 'departement' AS DEPARTEMENT
FROM
  FRONT.HEBERGEMENT ;

CREATE TABLE FRONT.HEBERGEMENT_TYPE (
  ID SERIAL NOT NULL,
  VALUE VARCHAR(100),
  CONSTRAINT PK_HEBERGEMENT_TYPE PRIMARY KEY (ID)
);

INSERT INTO
  FRONT.HEBERGEMENT_TYPE (VALUE)
VALUES
  ('hotel'),
  ('meuble_tourisme'),
  ('residence_tourisme'),
  ('camping'),
  ('autre') ;

CREATE TABLE FRONT.HEBERGEMENT_TYPE_PENSION (
  ID SERIAL NOT NULL,
  VALUE VARCHAR(100),
  CONSTRAINT PK_HEBERGEMENT_TYPE_PENSION PRIMARY KEY (ID)
);

INSERT INTO
  FRONT.HEBERGEMENT_TYPE_PENSION (VALUE)
VALUES
  ('hebergement_seul'),
  ('petit_dejeuner'),
  ('demi_pension'),
  ('pension_complete') ;

CREATE TABLE FRONT.HEBERGEMENT_ACCESSIBILITE (
  ID SERIAL NOT NULL,
  VALUE VARCHAR(100),
  CONSTRAINT PK_HEBERGEMENT_ACCESSIBILITE PRIMARY KEY (ID)
);

INSERT INTO
  FRONT.HEBERGEMENT_ACCESSIBILITE (VALUE)
VALUES
  ('accessible'),
  ('non_adapte'),
  ('commentaires') ;

CREATE TABLE FRONT.HEBERGEMENT_PRESTATIONS_HOTELIERES (
  ID SERIAL NOT NULL,
  VALUE VARCHAR(100),
  CONSTRAINT PK_HEBERGEMENT_PRESTATIONS_HOTELIERES PRIMARY KEY (ID)
);

INSERT INTO
  FRONT.HEBERGEMENT_PRESTATIONS_HOTELIERES (VALUE)
VALUES
  ('blanchisseries'),
  ('entretien_locaux') ;

CREATE TABLE FRONT.HEBERGEMENT_TO_PRESTATIONS_HOTELIERES(
    HEBERGEMENT_ID INTEGER REFERENCES FRONT.HEBERGEMENT (ID) ON DELETE CASCADE,
    PRESTATION_ID INTEGER REFERENCES FRONT.HEBERGEMENT_PRESTATIONS_HOTELIERES (ID) ON DELETE CASCADE,
    CONSTRAINT pk_hebergement_prestation PRIMARY KEY (HEBERGEMENT_ID, PRESTATION_ID)
);

ALTER TABLE FRONT.HEBERGEMENT
ADD COLUMN HEBERGEMENT_ID UUID NOT NULL DEFAULT GEN_RANDOM_UUID (),
ADD COLUMN CURRENT BOOLEAN NOT NULL DEFAULT TRUE,
ADD COLUMN CREATED_BY INTEGER REFERENCES FRONT.USERS (ID),
ADD COLUMN EDITED_BY INTEGER REFERENCES FRONT.USERS (ID),
ADD COLUMN EMAIL VARCHAR(320),
ADD COLUMN ADRESSE_ID INTEGER REFERENCES FRONT.ADRESSE (ID),
ADD COLUMN TELEPHONE_1 VARCHAR(20),
ADD COLUMN TELEPHONE_2 VARCHAR(20),
ADD COLUMN NOM_GESTIONNAIRE VARCHAR(320),
ADD COLUMN TYPE_ID INTEGER REFERENCES FRONT.HEBERGEMENT_TYPE (ID),
ADD COLUMN TYPE_PENSION_ID INTEGER REFERENCES FRONT.HEBERGEMENT_TYPE_PENSION (ID),
ADD COLUMN NOMBRE_LITS INTEGER,
ADD COLUMN LIT_DESSUS BOOLEAN,
ADD COLUMN NOMBRE_LITS_SUPERPOSES INTEGER,
ADD COLUMN NOMBRE_MAX_PERSONNES_COUCHAGE INTEGER,
ADD COLUMN VISITE_LOCAUX BOOLEAN,
ADD COLUMN VISITE_LOCAUX_AT TIMESTAMP WITH TIME ZONE,
ADD COLUMN ACCESSIBILITE_ID INTEGER REFERENCES FRONT.HEBERGEMENT_ACCESSIBILITE (ID),
ADD COLUMN ACCESSIBILITE_PRECISION TEXT,
ADD COLUMN CHAMBRES_DOUBLES BOOLEAN,
ADD COLUMN CHAMBRES_UNISEXES BOOLEAN,
ADD COLUMN REGLEMENTATION_ERP BOOLEAN,
ADD COLUMN COUCHAGE_INDIVIDUEL BOOLEAN,
ADD COLUMN RANGEMENT_INDIVIDUEL BOOLEAN,
ADD COLUMN AMENAGEMENTS_SPECIFIQUES BOOLEAN,
ADD COLUMN AMENAGEMENTS_SPECIFIQUES_PRECISION TEXT,
ADD COLUMN DESCRIPTION_LIEU_HEBERGEMENT TEXT,
ADD COLUMN EXCURSION_DESCRIPTION TEXT,
ADD COLUMN DEPLACEMENT_PROXIMITE_DESCRIPTION TEXT,
ADD COLUMN VEHICULES_ADAPTES TEXT,
ADD COLUMN FILE_REPONSE_EXPLOITANT_OU_PROPRIETAIRE UUID,
ADD COLUMN FILE_DERNIER_ARRETE_AUTORISATION_MAIRE UUID,
ADD COLUMN FILE_DERNIERE_ATTESTATION_SECURITE UUID;

UPDATE FRONT.HEBERGEMENT
SET
  EMAIL = COORDONNEES ->> 'email',
  ADRESSE_ID = (
    SELECT
      ID
    FROM
      FRONT.ADRESSE A
    WHERE
      A.LABEL = COORDONNEES -> 'adresse' ->> 'label'
      AND A.CODE_INSEE = COORDONNEES -> 'adresse' ->> 'codeInsee'
      AND A.CODE_POSTAL = COORDONNEES -> 'adresse' ->> 'codePostal'
      AND A.LONG = (COORDONNEES -> 'adresse' -> 'coordinates' -> 0)::DOUBLE PRECISION
      AND A.LAT = (COORDONNEES -> 'adresse' -> 'coordinates' -> 1)::DOUBLE PRECISION
      AND A.DEPARTEMENT = COORDONNEES -> 'adresse' ->> 'departement'
  ),
  TELEPHONE_1 = COORDONNEES ->> 'numTelephone1',
  TELEPHONE_2 = COORDONNEES ->> 'numTelephone2',
  NOM_GESTIONNAIRE = COORDONNEES ->> 'nomGestionnaire',
  TYPE_ID = (
    SELECT
      ID
    FROM
      FRONT.HEBERGEMENT_TYPE
    WHERE
      VALUE = INFORMATIONS_LOCAUX ->> 'type'
  ),
  TYPE_PENSION_ID = (
    SELECT
      ID
    FROM
      FRONT.HEBERGEMENT_TYPE_PENSION
    WHERE
      VALUE = INFORMATIONS_LOCAUX ->> 'pension'
  ),
  LIT_DESSUS = (INFORMATIONS_LOCAUX ->> 'litsDessus')::BOOLEAN,
  NOMBRE_LITS = (INFORMATIONS_LOCAUX ->> 'nombreLits')::INTEGER,
  NOMBRE_LITS_SUPERPOSES = (INFORMATIONS_LOCAUX ->> 'nombreLitsSuperposes')::INTEGER,
  NOMBRE_MAX_PERSONNES_COUCHAGE = (
    INFORMATIONS_LOCAUX ->> 'nombreMaxPersonnesCouchage'
  )::INTEGER,
  VISITE_LOCAUX = (INFORMATIONS_LOCAUX ->> 'visiteLocaux')::BOOLEAN,
  VISITE_LOCAUX_AT = (INFORMATIONS_LOCAUX ->> 'visiteLocauxAt')::TIMESTAMP WITH TIME ZONE,
  ACCESSIBILITE_ID = (
    SELECT
      ID
    FROM
      FRONT.HEBERGEMENT_ACCESSIBILITE
    WHERE
      VALUE = INFORMATIONS_LOCAUX ->> 'accessibilite'
  ),
  ACCESSIBILITE_PRECISION = (INFORMATIONS_LOCAUX ->> 'accessibilitePrecision')::TEXT,
  CHAMBRES_DOUBLES = (INFORMATIONS_LOCAUX ->> 'chambresDoubles')::BOOLEAN,
  CHAMBRES_UNISEXES = (INFORMATIONS_LOCAUX ->> 'chambresUnisexes')::BOOLEAN,
  REGLEMENTATION_ERP = (INFORMATIONS_LOCAUX ->> 'reglementationErp')::BOOLEAN,
  COUCHAGE_INDIVIDUEL = (INFORMATIONS_LOCAUX ->> 'couchageIndividuel')::BOOLEAN,
  RANGEMENT_INDIVIDUEL = (INFORMATIONS_LOCAUX ->> 'rangementIndividuel')::BOOLEAN,
  AMENAGEMENTS_SPECIFIQUES = (INFORMATIONS_LOCAUX ->> 'amenagementsSpecifiques')::BOOLEAN,
  AMENAGEMENTS_SPECIFIQUES_PRECISION = (INFORMATIONS_LOCAUX ->> 'precisionAmenagementsSpecifiques')::TEXT,
  DESCRIPTION_LIEU_HEBERGEMENT = INFORMATIONS_LOCAUX ->> 'descriptionLieuHebergement',
  EXCURSION_DESCRIPTION = INFORMATIONS_TRANSPORT ->> 'excursion',
  DEPLACEMENT_PROXIMITE_DESCRIPTION = INFORMATIONS_TRANSPORT ->> 'deplacementProximite',
  VEHICULES_ADAPTES = (INFORMATIONS_TRANSPORT ->> 'vehiculesAdaptes')::BOOLEAN,
  FILE_REPONSE_EXPLOITANT_OU_PROPRIETAIRE = (
    INFORMATIONS_LOCAUX -> 'fileReponseExploitantOuProprietaire' ->> 'uuid'
  )::UUID,
  FILE_DERNIER_ARRETE_AUTORISATION_MAIRE = (
    INFORMATIONS_LOCAUX -> 'fileDernierArreteAutorisationMaire' ->> 'uuid'
  )::UUID,
  FILE_DERNIERE_ATTESTATION_SECURITE = (
    INFORMATIONS_LOCAUX -> 'fileDerniereAttestationSecurite' ->> 'uuid'
  )::UUID;

INSERT INTO
  FRONT.HEBERGEMENT_TO_PRESTATIONS_HOTELIERES (HEBERGEMENT_ID, PRESTATION_ID)
SELECT
  HEBERGEMENT_ID,
  (
    SELECT
      ID
    FROM
      FRONT.HEBERGEMENT_PRESTATIONS_HOTELIERES
    WHERE
      VALUE = SUB_HEBERGEMENT.HEBERGEMENT_PRESTATIONS_HOTELIERES_VALUE
  )
FROM
  (
    SELECT
      ID AS HEBERGEMENT_ID,
      JSONB_ARRAY_ELEMENTS(
        INFORMATIONS_LOCAUX -> 'prestationsHotelieres'::TEXT
      ) ->> 0 AS HEBERGEMENT_PRESTATIONS_HOTELIERES_VALUE
    FROM
      FRONT.HEBERGEMENT
  ) SUB_HEBERGEMENT;

CREATE TABLE FRONT.DEMANDE_SEJOUR_TO_HEBERGEMENT (
  HEBERGEMENT_ID INTEGER REFERENCES FRONT.HEBERGEMENT (ID),
  DEMANDE_SEJOUR_ID INTEGER REFERENCES FRONT.DEMANDE_SEJOUR (ID),
  DATE_DEBUT TIMESTAMP WITH TIME ZONE NOT NULL,
  DATE_FIN TIMESTAMP WITH TIME ZONE NOT NULL,
  CONSTRAINT UNIQUE_IDS_DATES UNIQUE (
    HEBERGEMENT_ID,
    DEMANDE_SEJOUR_ID,
    DATE_DEBUT,
    DATE_FIN
  )
) ;

INSERT INTO
  FRONT.DEMANDE_SEJOUR_TO_HEBERGEMENT (
    HEBERGEMENT_ID,
    DEMANDE_SEJOUR_ID,
    DATE_DEBUT,
    DATE_FIN
  )
SELECT
  (
    JSONB_ARRAY_ELEMENTS(HEBERGEMENT -> 'hebergements') -> 'hebergementId' ->> 0
  )::INTEGER AS HEBERGEMENT_ID,
  ID AS DEMANDE_SEJOUR_ID,
  (
    JSONB_ARRAY_ELEMENTS(HEBERGEMENT -> 'hebergements') -> 'dateDebut' ->> 0
  )::TIMESTAMP WITH TIME ZONE AS DATE_DEBUT,
  (
    JSONB_ARRAY_ELEMENTS(HEBERGEMENT -> 'hebergements') -> 'dateFin' ->> 0
  )::TIMESTAMP WITH TIME ZONE AS DATE_FIN
FROM
  FRONT.DEMANDE_SEJOUR ;

CREATE UNIQUE INDEX idx_hebergement_hebergement_id ON FRONT.HEBERGEMENT (hebergement_id) WHERE (CURRENT IS TRUE);

GRANT ALL ON TABLE FRONT.ADRESSE TO vao_u ;
GRANT ALL ON TABLE FRONT.HEBERGEMENT_TYPE TO vao_u ;
GRANT ALL ON TABLE FRONT.HEBERGEMENT_TYPE_PENSION TO vao_u ;
GRANT ALL ON TABLE FRONT.HEBERGEMENT_ACCESSIBILITE TO vao_u ;
GRANT ALL ON TABLE FRONT.HEBERGEMENT_PRESTATIONS_HOTELIERES TO vao_u ;
GRANT ALL ON TABLE FRONT.HEBERGEMENT_TO_PRESTATIONS_HOTELIERES TO vao_u ;
GRANT ALL ON TABLE FRONT.DEMANDE_SEJOUR_TO_HEBERGEMENT TO vao_u ;

GRANT ALL ON SEQUENCE FRONT.ADRESSE_ID_SEQ TO VAO_U ;
GRANT ALL ON SEQUENCE FRONT.HEBERGEMENT_TYPE_ID_SEQ TO VAO_U ;
GRANT ALL ON SEQUENCE FRONT.HEBERGEMENT_TYPE_PENSION_ID_SEQ TO VAO_U ;
GRANT ALL ON SEQUENCE FRONT.HEBERGEMENT_ACCESSIBILITE_ID_SEQ TO VAO_U ;
GRANT ALL ON SEQUENCE FRONT.HEBERGEMENT_PRESTATIONS_HOTELIERES_ID_SEQ TO VAO_U ;

  `);
};

/**
 * @param { import("knex").Knex } knex
 * @returns { Promise<void> }
 */
exports.down = function (knex) {
  return knex.raw(`
ALTER TABLE FRONT.HEBERGEMENT
DROP COLUMN HEBERGEMENT_ID,
DROP COLUMN CURRENT,
DROP COLUMN CREATED_BY,
DROP COLUMN EDITED_BY,
DROP COLUMN EMAIL,
DROP COLUMN ADRESSE_ID,
DROP COLUMN TELEPHONE_1,
DROP COLUMN TELEPHONE_2,
DROP COLUMN NOM_GESTIONNAIRE,
DROP COLUMN TYPE_ID,
DROP COLUMN TYPE_PENSION_ID,
DROP COLUMN NOMBRE_LITS,
DROP COLUMN LIT_DESSUS,
DROP COLUMN NOMBRE_LITS_SUPERPOSES,
DROP COLUMN NOMBRE_MAX_PERSONNES_COUCHAGE,
DROP COLUMN VISITE_LOCAUX,
DROP COLUMN ACCESSIBILITE_ID,
DROP COLUMN CHAMBRES_DOUBLES,
DROP COLUMN CHAMBRES_UNISEXES,
DROP COLUMN REGLEMENTATION_ERP,
DROP COLUMN COUCHAGE_INDIVIDUEL,
DROP COLUMN RANGEMENT_INDIVIDUEL,
DROP COLUMN AMENAGEMENTS_SPECIFIQUES,
DROP COLUMN DESCRIPTION_LIEU_HEBERGEMENT,
DROP COLUMN EXCURSION_DESCRIPTION,
DROP COLUMN DEPLACEMENT_PROXIMITE_DESCRIPTION,
DROP COLUMN VEHICULES_ADAPTES,
DROP COLUMN FILE_REPONSE_EXPLOITANT_OU_PROPRIETAIRE,
DROP COLUMN FILE_DERNIER_ARRETE_AUTORISATION_MAIRE,
DROP COLUMN FILE_DERNIERE_ATTESTATION_SECURITE,
DROP COLUMN VISITE_LOCAUX_AT,
DROP COLUMN ACCESSIBILITE_PRECISION,
DROP COLUMN AMENAGEMENTS_SPECIFIQUES_PRECISION;

DROP TABLE FRONT.HEBERGEMENT_TO_PRESTATIONS_HOTELIERES ;
DROP TABLE FRONT.HEBERGEMENT_PRESTATIONS_HOTELIERES ;
DROP TABLE FRONT.HEBERGEMENT_ACCESSIBILITE ;
DROP TABLE FRONT.HEBERGEMENT_TYPE_PENSION ;
DROP TABLE FRONT.HEBERGEMENT_TYPE ;
DROP TABLE FRONT.ADRESSE ;

DROP TABLE FRONT.DEMANDE_SEJOUR_TO_HEBERGEMENT ;
  `);
};
