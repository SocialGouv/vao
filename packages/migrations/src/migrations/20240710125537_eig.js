/**
 * @param { import("knex").Knex } knex
 * @returns { Promise<void> }
 */
exports.up = function (knex) {
  return knex.raw(`
CREATE TABLE FRONT.EIG_CATEGORIE (
  ID SERIAL NOT NULL,
  CATEGORIE VARCHAR(128) UNIQUE NOT NULL,
  CONSTRAINT PK_EIG_EIG_CATEGORIE PRIMARY KEY (ID)
) ;

INSERT INTO
FRONT.EIG_CATEGORIE (CATEGORIE)
VALUES
('VICTIMES'),
  ('SANTE'),
  ('SECURITE'),
  ('FONCTIONNEMENT_ORGANISME') ;

CREATE TABLE FRONT.EIG_TYPE (
  ID SERIAL NOT NULL,
  TYPE VARCHAR(128) UNIQUE NOT NULL,
  EIG_CATEGORIE_ID INTEGER NOT NULL REFERENCES FRONT.EIG_CATEGORIE (ID),
  CONSTRAINT PK_EIG_TYPE PRIMARY KEY (ID)
);

INSERT INTO
FRONT.EIG_TYPE (TYPE, EIG_CATEGORIE_ID)
VALUES
('VIOLENCES_SEXUELLES', 1),
  ('VIOLS', 1),
  ('VIOLENCES_PSYCHOLOGIQUES_ET_MORALES', 1),
  ('VIOLENCES_PHYSIQUES', 1),
  ('NON_RESPECT_PRESCRIPTION_MEDICALE', 1),
  ('PRIVATION_DE_DROIT', 1),
  ('NEGLIGENCE_GRAVE_OU_ERREURS_SUCCESSIVES', 1),
  ('MALTRAITANCES_NON_PRECISEES', 1),
  ('SUICIDE', 1),
  ('TENTATIVE_DE_SUICIDE', 1),
  ('AUTRE__VICTIMES', 1),
  ('EPIDEMIE', 2),
  ('ACCIDENT_CORPOREL', 2),
  ('AUTRE__SANTE', 2),
  ('VOLS', 3),
  ('FUGUE', 3),
  ('ACTES_DE_MALVEILLANCE', 3),
  ('INTOXICATION_ALIMENTAIRE', 3),
  ('DEPART_DE_FEU', 3),
  ('INCENDIE', 3),
  ('INONDATION', 3),
  ('AUTRE__SECURITE', 3),
  ('PROCEDURES_JUDICIAIRES_CONTRE_LE_PERSONNELS', 4),
  ('DEFAILLANCE_DE_PERSONNELS', 4),
  ('DEFAILLANCES_TECHNIQUES', 4),
  ('CONFLITS_OU_MENACES_DE_CONFLITS_INTERNES', 4),
  ('AUTRE__FONCTIONNEMENT_ORGANISME', 4);

CREATE TABLE FRONT.EIG_STATUT (
  ID SERIAL NOT NULL,
  STATUT VARCHAR(128) UNIQUE NOT NULL,
  CONSTRAINT PK_EIG_STATUT PRIMARY KEY (ID)
);

INSERT INTO
FRONT.EIG_STATUT (STATUT)
VALUES
  ('BROUILLON'),
  ('ENVOYE') ;


CREATE TABLE FRONT.EIG (
  ID SERIAL NOT NULL,
  USER_ID INTEGER NOT NULL REFERENCES FRONT.USERS (ID),
  STATUT_ID INTEGER NOT NULL REFERENCES FRONT.EIG_STATUT (ID) DEFAULT 1,
  DEMANDE_SEJOUR_ID INTEGER NOT NULL REFERENCES FRONT.DEMANDE_SEJOUR (ID),
  PERSONNEL JSONB[],
  DEROULEMENT TEXT,
  DISPOSITION_REMEDIATION TEXT,
  DISPOSITION_VICTIMES TEXT,
  DISPOSITION_INFORMATIONS TEXT,
  IS_ATTESTE BOOLEAN DEFAULT FALSE,
  created_at TIMESTAMP DEFAULT current_timestamp NOT NULL,
  edited_at TIMESTAMP DEFAULT current_timestamp NOT NULL,
  CONSTRAINT PK_EIG PRIMARY KEY (ID)
) ;

CREATE INDEX idx_eig__user ON FRONT.EIG (USER_ID) ;
CREATE INDEX idx_eig__statut ON FRONT.EIG (STATUT_ID) ;
CREATE INDEX idx_eig__declaration ON FRONT.EIG (DEMANDE_SEJOUR_ID) ;

CREATE TABLE FRONT.EIG_TO_EIG_TYPE (
  EIG_ID INTEGER NOT NULL REFERENCES FRONT.EIG (ID),
  EIG_TYPE_ID INTEGER NOT NULL REFERENCES FRONT.EIG_TYPE (ID),
  PRECISIONS TEXT,
  CONSTRAINT PK_EIG_TO_EIG_TYPE PRIMARY KEY (EIG_ID, EIG_TYPE_ID)
) ;

GRANT ALL ON TABLE FRONT.EIG_CATEGORIE TO vao_u;
GRANT ALL ON TABLE FRONT.EIG_TYPE TO vao_u;
GRANT ALL ON TABLE FRONT.EIG_STATUT TO vao_u;
GRANT ALL ON TABLE FRONT.EIG TO vao_u;
GRANT ALL ON TABLE FRONT.EIG_TO_EIG_TYPE TO vao_u;

GRANT ALL ON SEQUENCE FRONT.EIG_CATEGORIE_ID_SEQ TO vao_u;
GRANT ALL ON SEQUENCE FRONT.EIG_ID_SEQ TO vao_u;
GRANT ALL ON SEQUENCE FRONT.EIG_STATUT_ID_SEQ TO vao_u;
GRANT ALL ON SEQUENCE FRONT.EIG_TYPE_ID_SEQ TO vao_u;
`);
};

/**
 * @param { import("knex").Knex } knex
 * @returns { Promise<void> }
 */
exports.down = function (knex) {
  return knex.raw(`
DROP INDEX front.idx_eig__user;
DROP INDEX front.idx_eig__statut;
DROP INDEX front.idx_eig__declaration;

drop table FRONT.EIG_TO_EIG_TYPE ;
drop table FRONT.EIG;
drop table FRONT.EIG_STATUT;
drop table FRONT.EIG_TYPE;
drop table FRONT.EIG_CATEGORIE;
  `);
};
